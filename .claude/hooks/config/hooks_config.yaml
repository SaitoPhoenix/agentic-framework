# Claude Code Hooks Configuration
# This file centralizes all hook configurations
# Update these settings to customize hook behavior

# Stop Hook - Runs when Claude Code finishes responding
stop:
  log_hook:
    enabled: true
    module: "log_hook.main"
    function: "log_hook_data"
    config:
      hook_name: "stop"
  tts_notification:
    enabled: true
    module: "tts_notification.main"
    function: "announce_tts"
    config:
      tts:  # Used to play audio of the message
        provider: "elevenlabs" # openai, gcloud, elevenlabs, pyttsx3 (default)
        # gcloud voices: en-US-Chirp3-HD-Despina, en-US-Wavenet-F
        # openai voices: alloy, echo, fable, onyx, nova, shimmer
        # elevenlabs voices: WejK3H1m7MI9CHnIjW9K, fUjY9K2nAIwlALOwSiwc
        voice: "fUjY9K2nAIwlALOwSiwc"
        # elevenlabs models: eleven_turbo_v2_5, eleven_multilingual_v2
        # openai models: gpt-4o-mini-tts, gpt-4o-audio-preview
        model: "eleven_turbo_v2_5" # Only used for openai and elevenlabs
      llm:  # Used to generate the text of the message
        provider: "openai" # openai, anthropic, ollama, tabby (default)
        # openai models: gpt-4o-mini, gpt-5
        # anthropic models: claude-3-5-haiku-latest
        # ollama models: gpt-oss:20b
        model: "gpt-4o-mini" # Only used for openai, anthropic, ollama
        base_url: # Only used for openai, anthropic, ollama, leave blank if unused
      message_pattern: "completion_message.j2" # Used to generate the text of the message
      user_name: "Saito" # Used to personalize the message

# Notification Hook - Runs when Claude sends notifications
notification:
  log_hook:
    enabled: true
    module: "log_hook.main"
    function: "log_hook_data"
    config:
      hook_name: "notification"

# SubagentStop Hook - Runs when subagent tasks complete
subagent_stop:
  log_hook:
    enabled: true
    module: "log_hook.main"
    function: "log_hook_data"
    config:
      hook_name: "subagent_stop"

# UserPromptSubmit Hook - Runs when user submits a prompt
user_prompt_submit:
  log_hook:
    enabled: true
    module: "log_hook.main"
    function: "log_hook_data"
    config:
      hook_name: "user_prompt_submit"

# PreToolUse Hook - Runs before tool calls
pre_tool_use:
  log_hook:
    enabled: true
    module: "log_hook.main"
    function: "log_hook_data"
    config:
      hook_name: "pre_tool_use"

# PostToolUse Hook - Runs after tool calls complete
post_tool_use:
  log_hook:
    enabled: true
    module: "log_hook.main"
    function: "log_hook_data"
    config:
      hook_name: "post_tool_use"

# PreCompact Hook - Runs before context compaction
pre_compact:
  log_hook:
    enabled: true
    module: "log_hook.main"
    function: "log_hook_data"
    config:
      hook_name: "pre_compact"

# SessionStart Hook - Runs when session starts/resumes
session_start:
  log_hook:
    enabled: true
    module: "log_hook.main"
    function: "log_hook_data"
    config:
      hook_name: "session_start"

  # Conversation capture configuration
  conversation_capture:
    enabled: true # Enable conversation capture
    module: "conversation_capture.main" # Module to use for conversation capture
    function: "start_conversation_capture" # Function to use for conversation capture
    config:
      pid_file_name: "conversation_watchdog.pid" # Name of PID file for conversation watchdog
      episodic_path: ".claude/agents/memory/episodic" # Directory for episodic memory files
      human_name: "Saito" # Human name for conversation
      agent_name: "The Architect" # Primary agent for conversation

# SessionEnd Hook - Runs when session ends
session_end:
  log_hook:
    enabled: true
    module: "log_hook.main"
    function: "log_hook_data"
    config:
      hook_name: "session_end"
      
  # Cleanup subprocesses configuration
  cleanup_subprocesses:
    enabled: true # Enable cleanup subprocesses
    module: "cleanup_subprocesses.main" # Module to use for cleanup subprocesses
    function: "cleanup_subprocesses" # Function to use for cleanup subprocesses
    config:

# Global Settings - Apply to all hooks
# API Keys and URLs are loaded from .env file
global:
  # Logging
  log_directory: "logs" # Directory for all log files
  # Performance
  subprocess_timeout: 10 # Timeout for subprocess calls (seconds)
  # Debug
  verbose_errors: true # Show detailed error messages
